<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:component-scan base-package="com.std">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
       <property name="triggers">  
           <list>
              <ref bean="poolTrigger"/> 
              <ref bean="dayReportTrigger"/> 
<!--               <ref bean="accessTokenTrigger"/> 
 -->           </list>  
       </property>  
       <property name="autoStartup" value="true"/>  
    </bean> 
	
	<bean id="poolTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
       <property name="jobDetail" ref="poolJobDetail"/>  
       <property name="cronExpression" value="10 0/1 * * * ?"/><!--0 0 0/1 * * ?每隔1个小时   -->
	</bean>
	
	<bean id="dayReportTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
       <property name="jobDetail" ref="dayReportJobDetail"/>  
       <property name="cronExpression" value="0 0 23 * * ? *"/><!--0 0 23 * * ?每天23点   -->
	</bean>
	
	<!-- <bean id="accessTokenTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
       <property name="jobDetail" ref="doAccessTokenDaily"/>  
       <property name="cronExpression" value="0 0 0/1 * * ?"/>0 0 0/1 * * ? 每隔1小时
	</bean> -->
	
	<bean id="poolJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">   
	        <property name="targetObject" ref="poolAOImpl"/>  
	        <property name="targetMethod" value="doSendFromPool"/>  
	        <property name="concurrent" value="true"/>  <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程  --> 
	</bean>
	
	<bean id="dayReportJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">   
	        <property name="targetObject" ref="dayReportAOImpl"/>  
	        <property name="targetMethod" value="doSaveDayReport"/>  
	        <property name="concurrent" value="true"/>  <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程  --> 
	</bean>
	
	<!--<bean id="doAccessTokenDaily" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">   
	        <property name="targetObject" ref="systemChannelAOImpl"/>  
	        <property name="targetMethod" value="doAccessTokenDaily"/>  
	        <property name="concurrent" value="true"/>  是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程  
	</bean> -->
	
</beans>
